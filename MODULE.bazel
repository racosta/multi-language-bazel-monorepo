"""Multi-language Bazel Monorepo example"""

module(
    name = "multi_language_bazel_monorepo",
    version = "0.0.0",
)

bazel_dep(name = "gazelle", version = "0.40.0")
bazel_dep(name = "rules_go", version = "0.50.1")
bazel_dep(name = "rules_python", version = "1.0.0")

# Python

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    configure_coverage_tool = True,
    python_version = "3.9",
)
python.toolchain(
    configure_coverage_tool = True,
    python_version = "3.10",
)
python.toolchain(
    configure_coverage_tool = True,
    # Only set when you have multiple toolchain versions.
    is_default = True,
    python_version = "3.11",
)
use_repo(
    python,
    "pythons_hub",
    python = "python_versions",
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pypi",
    python_version = "3.9",
    requirements_lock = "//third_party/python:requirements_lock_3_9.txt",
)
pip.parse(
    hub_name = "pypi",
    python_version = "3.10",
    requirements_lock = "//third_party/python:requirements_lock_3_10.txt",
)
pip.parse(
    hub_name = "pypi",
    python_version = "3.11",
    requirements_lock = "//third_party/python:requirements_lock_3_11.txt",
)
use_repo(pip, "pypi")

# Go

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(version = "1.23.3")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//third_party/golang:go.mod")
use_repo(
    go_deps,
    "com_github_gorilla_mux",
)
